<div id="guests-container" class="ui two column middle aligned grid basic segment">
	<div class="guys-container column">
		<div class="ui form">
			<h4>Gents <div class="ui red label" id="guy-count">42</div></h4>
			<div class="field">
				<div class="ui action input">
					<input id="addM" class="guestName-M" type="text" placeholder="His name...">
					<div class="ui icon button guest-submit male"><i class="add user icon"></i></div>
				</div>
			</div>
		</div>
		<div class="ui selection list list-group guys"></div>
	</div>
	<div class="ui vertical divider">:</div>
	<div class="girls-container column">
		<div class="ui form">
			<h4>Dames <div class="ui teal label" id="girl-count">23</div></h4>
			<div class="field">
				<div class="ui action input">
					<input type="text" id="addF" class="guestName-F" placeholder="Her name...">
					<div class="ui icon button guest-submit female"><i class="add user icon"></i></div>
				</div>
			</div>
		</div>
		<div class="ui selection list list-group girls"></div>
	</div>
</div>


<script type="text/javascript">

	function verifyName(name) {
		var noInject = /[\^<,\"@\/\{\}\(\)\*\$%\?=>:\|;#]+/i;
		if(!name || name.match(noInject) || !name.match(/[A-Za-z]*/)) {
			return false;
		} else if(2 < name.split(/ (?=[A-Za-z])/).length < 4) {
			return true;
		} else {
			return false;
		}
	}

	function formatName(name) {
		var parts = name.split(" ");
		var formated = "";
		var words = 0;
		for (var i = 0; i < parts.length ; i++) {
			if (parts[i].length > 0 && words <= 4) {
				formated = formated + parts[i] + " ";
				words++;
			}
		}
		return formated.trim();
	}
	var GuestsModel = Backbone.Model.extend({
		urlRoot: '/guests',
	});

	var GuestsCollection = Backbone.Collection.extend({
		url: '/guests',
		model: GuestsModel
	});
	_.templateSettings = {
	    interpolate : /\{\{(.+?)\}\}/g
	};

	var editTimeout = null;
	var GuestView = Backbone.View.extend({
		tagName: 'li',
		guestEditSelector: '.guest-entry',
		template: _.template("<input class='guest-entry'" +
							  "value='{{guest.name}}'/>" +
							  "<div class='guest-details'>" +
							  "<span style='display: none' class='addedBy'>{{addedBy}}</span>" +
							  "<i class='close icon'></i>" +
							  "</div>"),

		events: {
			'keyup .guest-entry.editable' : 'editEntry',
			'click .close' : 'killself'
		},

		render: function() {
			var guest = this.model.toJSON();
			var addedBy = guest.addedBy.split('@')[0];
			this.$el.html(this.template({guest: guest, addedBy: addedBy}));


			if (guest.addedBy == '<%= username %>') {
				this.$el.find(this.guestEditSelector).addClass('editable');
			} else {
				this.$el.find(this.guestEditSelector).attr('readonly',true);
			}
			this.$el.addClass('list-group-item');
			this.$el.data({addedBy: guest.addedBy, age: guest.age, id: guest.id});
			guest.gender == 'M' ? $('#addM').val("") : $('#addF').val("");

			return this;
		},

		editEntry: function() {
			var guest = this.model.toJSON();
			var self = this;
			clearTimeout(editTimeout);
			
			editTimeout = setTimeout(function(){
				var text = self.$el.find(self.guestEditSelector).val();
				if (text === guest.name) {
					return false;
				} else if (verifyName(text)){
					text = formatName(text);
					self.model.save({name: text},{
						success: function(model, resp) {
							self.model.set({name: text});
						},
						error: function(model, resp) {
							alert("error updating user," + resp.responseText);
							self.model.set({name: guest.name});
							self.$el.find(self.guestEditSelector).val(guest.name);
							console.log('happened');
						}
					});
				}
			},1000)
		},

		killself: function() {
			var that = this;
			if(this.model.toJSON().addedBy != '<%= username %>'){
				return false;
			}

			that.model.destroy({
				success: function(model, response) {
					that.$el.slideUp(200,function(){
						that.remove();
					});
				},
				error: function(model, response){
					alert(response.responseText);
				},
				wait: true}
			);
		}
	});

	var GuestListView = Backbone.View.extend({
		el: $('#guests-container'),
		guys: 0,
		myguys: 0,
		girls: 0,
		mygirls: 0,

		initialize: function() {
			this.collection.on('add', this.add, this);
			this.collection.on('remove',this.remove,this);
			this.render();
		},

		appendByGender: function(guest) {
			if(guest.toJSON().gender === 'M'){
				$('.list-group.guys').append(new GuestView({model: guest}).render().el);
			} else {
				$('.list-group.girls').append(new GuestView({model: guest}).render().el);
			}
		},

		updateCount: function(guest,delta,norender) {
			guest = guest.toJSON()
			if (guest.gender === 'M') {
				this.guys = this.guys + delta;
				if(guest.addedBy == '<%= username %>') this.myguys += delta
			} else {
				this.girls = this.girls + delta;
				if(guest.addedBy == '<%= username %>') this.mygirls += delta

			}

			if(!norender) {
				this.renderCount();
			}
		},

		renderCount: function (full) {
			if(full){
				$('#guy-count').text(this.guys);
				$('#girl-count').text(this.girls);
			} else {
				$('#guy-count').text(this.myguys);
				$('#girl-count').text(this.mygirls);
			}
		},

		render: function () {
			this.collection.each(function(guest){
				this.appendByGender(guest);
				if (guest.toJSON().gender == 'M') {
					this.updateCount(guest,1,true)
				} else {
					this.updateCount(guest,1,true)
				}
			},this);

			this.renderCount(false);
			var that = this;
			$('#fulllist').click(function(){
				that.renderCount(true);
			});
			$('#mylist').click(function(){
				that.renderCount(false);
			});
			return this;
		},
		add: function (guest) {
			this.appendByGender(guest);
			this.updateCount(guest,1)
		},
		remove: function (guest) {
			this.collection.remove(guest);
			this.updateCount(guest,-1);
		}
	});

	var guestList = new GuestsCollection();
	var isMyList = false;

	guestList.fetch({
		success: function() {
			var gView = new GuestListView({collection: guestList});
			$('#mylist').click();
		},
		error: function() {
			console.log('guest list fetch failed!');
		}
	});

	$(document).ready(function(){
		$('#listViewOptions').show();
		$('#partyList').addClass('active');
		$('.guestName-M,.guestName-F').keyup(function(e){
			if (e.keyCode == 13) {
				$(this).parent().find('.guest-submit').trigger('click');
			}
		});
		$('.guest-submit').click(function(){
			var name = $(this).hasClass('male') ? $('.guestName-M').val() : $('.guestName-F').val();
			var gender = $(this).hasClass('male') ? 'M' : 'F';

			if (verifyName(name)) {
				guestList.create({name: formatName(name), gender: gender, addedBy: "<%= username %>"}, {
					error: function(model, response){
						alert(response.responseText);
					},
					wait: true}
				);
			} else {
				alert('names must contain between two and four words');
			}
		});
		$('#mylist').click(function(){
			$('li').children('.guest-entry:not(.editable)').parent().slideUp(400);
			$('#guests-container .field').slideDown();
			$('.addedBy').hide();
		});
		$('#fulllist').click(function(){
			$('li').children('.guest-entry').parent().slideDown();
			$('#guests-container .field').slideUp();
			$('.addedBy').show();
		});
		/*
		$('#mylist').click(function(){
			if (isMyList) return;
			isMyList = true;

			if($(this).parent().hasClass('active') == false) {
				$('li').children('.guest-entry:not(.editable)').parent().slideUp(400);
			}
			for (var i = 0; i < $('li').children('.guest-entry:not(.editable)').parent().length; i++) {
				var box = $('li').children('.guest-entry:not(.editable)').parent()[i];
				if ($('#guy-list').has(box).length) {
					$('#guy-count').text($('#guy-count').text() - 1.0);
				} else {
					$('#girl-count').text($('#girl-count').text() - 1.0);
				}
			}
		});
		$('#fulllist').click(function(){
			if (!isMyList) return;
			isMyList = false;

			if($(this).parent().hasClass('active') == false) {
				$('li').children('.guest-entry:not(.editable)').parent().slideDown();
			}
			for (var i = 0; i < $('li').children('.guest-entry:not(.editable)').parent().length; i++) {
				var box = $('li').children('.guest-entry:not(.editable)').parent()[i];
				if ($('#guy-list').has(box).length) {
					$('#guy-count').text($('#guy-count').text() - (-1));
				} else {
					$('#girl-count').text($('#girl-count').text() - (-1));
				}
			}
		});
		*/
	});
</script>
